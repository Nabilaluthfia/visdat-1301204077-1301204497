# -*- coding: utf-8 -*-
"""visdat_1301204077_1301204497.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cvQMIaagUsJpSr8iSoyvkM87BQsrDday

# Nabila Luthfia Arifin - 1301204077
# Nabiel Muhammad Al-Ghazali - 1301204497
"""
pip install bokeh

import pandas as pd
import numpy as np
from bokeh.plotting import figure, show
from bokeh.io import output_file
from bokeh.models import ColumnDataSource, HoverTool, CustomJS, Select
from bokeh.layouts import row, column
from bokeh.io import output_notebook
output_notebook()

from google.colab import drive
drive.mount('/content/drive')

df = pd.read_csv("/content/drive/MyDrive/Indonesia-Covid19.csv",encoding='ISO-8859-1') 
df.shape

df

columns =df.columns
columns
names =[ x for x in columns]
print (names)

df.rename(columns={'ï»¿Date' : 'Date'},inplace=True)

df

#info data
df.info()

# missing value
df.isnull().any()

# menghapus missing value
df.dropna(inplace=True)

df.isnull().sum()

#drop data dikarenakan terdapat beberapa atribut yang tidak terlalu dibutuhkan nilainya
df.drop('Longitude', inplace=True, axis=1)
df.drop('Latitude', inplace=True, axis=1)
df.drop('New Cases per Million', inplace=True, axis=1)
df.drop('Total Cases per Million', inplace=True, axis=1)
df.drop('New Deaths per Million', inplace=True, axis=1)
df.drop('Total Deaths per Million', inplace=True, axis=1)
df.drop('Total Deaths per 100rb', inplace=True, axis=1)

# melihat provinsi yang terpapar covid 19
province = df['Location'].unique()
province

# Merubah format tipe data kolom date
df['Date'] = pd.to_datetime(df['Date'])
df.dtypes

# membuat variabel berdasarkan 5 provinsi terpadat di indonesia
df_Jabar = pd.DataFrame(df[df["Location"] == 'Jawa Barat'])
df_Jabar.head()

# membuat variabel berdasarkan 5 provinsi terpadat di indonesia
df_Jateng = pd.DataFrame(df[df["Location"] == 'Jawa Tengah'])
df_Jateng.head()

# membuat variabel berdasarkan 5 provinsi terpadat di indonesia
df_Sumut = pd.DataFrame(df[df["Location"] == 'Sumatera Utara'])
df_Sumut.head()

# membuat variabel berdasarkan 5 provinsi terpadat di indonesia
df_Banten = pd.DataFrame(df[df["Location"] == 'Banten'])
df_Banten.head()

# membuat variabel berdasarkan 5 provinsi terpadat di indonesia
df_Bali = pd.DataFrame(df[df["Location"] == 'Bali'])
df_Bali.head()

# Menyimpan data pada ColumnDataSource
source_Jabar = ColumnDataSource(df_Jabar)
source_Jateng = ColumnDataSource(df_Jateng)
source_Sumut = ColumnDataSource(df_Sumut)
source_Banten = ColumnDataSource(df_Banten)
source_Bali = ColumnDataSource(df_Bali)

# Membuat file Output berbentuk html
output_file('Hasil Analisis Data Covid-19 di Indonesia.html', title='Data Covid')

# Membuat tooltips dan hover

tooltips = [('Location','@Location'), ('Growth Factor of New Cases', '@Growth Factor of New Cases')]
tooltips1 = [('Location','@Location'), ('Growth Factor of New Cases', '@Growth Factor of New Cases')]
tooltips2 = [('Location','@Location'), ('Total Cases','@Total Cases')]
tooltips3 = [('Location','@Location'), ('New Cases', '@New Cases')]

# Membuat Figure Analisis
fig = figure(plot_height=600, plot_width=800, x_axis_type='datetime', x_axis_label='Date', y_axis_label='Growth Factor of New Cases',
             title='Pertumbuhan Kasus Baru Covid 5 Provinsi Terpadat di Indonesia')

fig.add_tools(HoverTool(tooltips=tooltips))

fig.line(x='Date', y='Growth Factor of New Cases', source=source_Jabar, legend_label='Jawa Barat', color='red')
fig.line(x='Date', y='Growth Factor of New Cases', source=source_Jateng, legend_label='Jawa Tengah', color='blue')
fig.line(x='Date', y='Growth Factor of New Cases', source=source_Sumut, legend_label='Sumatera Utara', color='yellow')
fig.line(x='Date', y='Growth Factor of New Cases', source=source_Banten, legend_label='Banten', color='green')
fig.line(x='Date', y='Growth Factor of New Cases', source=source_Bali, legend_label='Bali', color='black')

options = [tooltips, tooltips1, tooltips2, tooltips3]

# Membuat callback untuk mengupdate tooltips
callback = CustomJS (args=dict(tt=fig.hover, opts=options), code="""
    if (cb_obj.value=='Normal') {
        tt[0].tooltips=opts[0]
    } else if (cb_obj.value=='Growth Factor of New Cases') {
      tt[0].tooltips=opts[1]
    } else if (cb_obj.value=='Total Cases') {
      tt[0].tooltips=opts[2]
    } else {
        tt[0].tooltips=opts[3]
    }
    """)

# Membuat menu dropdown parameter
stat_select = Select(options=['Total Cases', 'New Cases', 'Growth Factor of New Cases'], title='Parameter:')
stat_select.js_on_change("value", callback)

"""# Visualisasi Data"""

fig.legend.location = "top_right"
fig.legend.click_policy="hide"
show(column(stat_select,fig))
